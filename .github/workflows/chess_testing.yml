name: Rust Chess Engine CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test_engine_improvement:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout current commit (new engine)
      uses: actions/checkout@v4
      with:
        path: 'new_engine'

    - name: Checkout previous commit (old engine)
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.before }}
        path: 'old_engine'

    - name: Cache cutechess-cli build
      id: cache-cutechess
      uses: actions/cache@v4
      with:
        path: ./cutechess-cli
        key: cutechess-v1.4.0-${{ runner.os }}

    - name: Install and Build cutechess-cli v1.4.0
      if: steps.cache-cutechess.outputs.cache-hit != 'true'
      run: |
        echo "Cache miss. Building cutechess-cli from source..."
        echo "Installing Cute Chess dependencies..."
        sudo apt-get update -y
        sudo apt-get install -y git build-essential cmake qttools5-dev qtbase5-dev libqt5svg5-dev
        echo "Cloning and building cutechess-cli v1.4.0..."
        git clone https://github.com/cutechess/cutechess.git --branch v1.4.0 --single-branch
        cd cutechess
        mkdir build && cd build
        cmake ..
        # 1. OPTIMIZED: Build only the CLI target to save time.
        make cli
        echo "Build complete. Copying executable..."
        # 2. FIXED: Corrected the path to the compiled executable.
        cp ./cutechess-cli ../../cutechess-cli
        cd ../..

    - name: Set up Rust toolchain and cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "cargo-cache"

    - name: Build current engine with Cargo
      run: |
        cd new_engine
        echo "Building current commit (new_engine)..."
        cargo build --release

    - name: Build previous engine with Cargo
      run: |
        cd old_engine
        echo "Building previous commit (old_engine)..."
        cargo build --release
        
    - name: Download opening book
      run: |
        echo "Downloading opening book..."
        wget -O gm2001.bin https://github.com/gmcheems-org/free-opening-books/raw/main/books/bin/gm2001.bin

    - name: Prepare Engine Names
      run: |
        echo "NEW_COMMIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
        echo "OLD_COMMIT_SHA=$(echo ${{ github.event.before }} | cut -c1-7)" >> $GITHUB_ENV

    - name: Run cutechess-cli SPRT test
      id: sprt_test
      run: |
        echo "Starting SPRT test: NewCommit-${{ env.NEW_COMMIT_SHA }} vs OldCommit-${{ env.OLD_COMMIT_SHA }}"
        ./cutechess-cli \
        -engine cmd=./new_engine/target/release/chess_bot name=NewCommit-${{ env.NEW_COMMIT_SHA }} \
        -engine cmd=./old_engine/target/release/chess_bot name=OldCommit-${{ env.OLD_COMMIT_SHA }} \
        -each proto=uci tc=inf/1+0.1 book="./gm2001.bin" bookdepth=4 \
        -games 2 -rounds 2500 -repeat 2 -maxmoves 200 \
        -sprt elo0=0 elo1=10 alpha=0.05 beta=0.05 \
        -concurrency 2 \
        -ratinginterval 10 -pgnout games.pgn | tee cutechess_output.txt
      continue-on-error: true

    - name: Check SPRT results
      run: |
        echo "Analyzing SPRT results..."
        if grep -q "SPRT: H1 accepted" cutechess_output.txt; then
          echo "Result: PASSED. New commit is statistically stronger."
          exit 0
        elif grep -q "SPRT: H0 accepted" cutechess_output.txt; then
          echo "Result: FAILED. New commit is not statistically stronger."
          exit 1
        else
          echo "Result: INCONCLUSIVE. The SPRT test did not finish within the game limit."
          exit 1
        fi