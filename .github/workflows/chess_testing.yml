name: Branch vs. Master Engine CI

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test_engine_improvement:
    runs-on: ubuntu-latest
    if: github.ref_name != 'master'

    steps:
    - name: Checkout Feature Branch (New Engine)
      uses: actions/checkout@v4
      with:
        path: 'new_engine'

    - name: Checkout Master Branch (Old Engine)
      uses: actions/checkout@v4
      with:
        ref: 'master'
        path: 'old_engine'
        
    # NEW: Unconditional step to install dependencies for both build and runtime.
    - name: Install System Dependencies
      run: |
        echo "Installing system dependencies..."
        sudo apt-get update -y
        sudo apt-get install -y git build-essential cmake qttools5-dev qtbase5-dev libqt5svg5-dev unzip

    - name: Cache cutechess-cli build
      id: cache-cutechess
      uses: actions/cache@v4
      with:
        path: ./cutechess-cli
        # I've updated the key version to v3 to ensure a fresh build with the new logic.
        key: cutechess-v1.4.0-${{ runner.os }}-v3

    # UPDATED: This step now ONLY builds the application; dependencies are handled above.
    - name: Build cutechess-cli v1.4.0 from source
      if: steps.cache-cutechess.outputs.cache-hit != 'true'
      run: |
        echo "Cache miss. Building cutechess-cli..."
        git clone https://github.com/cutechess/cutechess.git --branch v1.4.0 --single-branch
        cd cutechess
        mkdir build && cd build
        cmake ..
        make cli
        echo "Build complete. Copying executable..."
        cp ./cutechess-cli ${{ github.workspace }}/cutechess-cli

    - name: Set up Rust toolchain and cache
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        cache-shared-key: "cargo-cache"

    - name: Build current engine (from feature branch)
      run: |
        cd new_engine
        echo "Building current commit from ${{ github.ref_name }}..."
        cargo build --release

    - name: Build old engine (from master branch)
      run: |
        cd old_engine
        echo "Building baseline commit from master..."
        cargo build --release
        
    - name: Download and Prepare Openings
      run: |
        echo "Downloading EPD opening book..."
        wget https://github.com/official-stockfish/books/raw/refs/heads/master/UHO_Lichess_4852_v1.epd.zip
        echo "Extracting opening book..."
        unzip UHO_Lichess_4852_v1.epd.zip

    - name: Prepare Engine Names
      run: |
        echo "BRANCH_NAME=$(echo ${{ github.ref_name }} | tr '/' '-')" >> $GITHUB_ENV
        echo "NEW_COMMIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
        echo "OLD_COMMIT_SHA=$(cd old_engine && git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Run cutechess-cli SPRT test
      id: sprt_test
      run: |
        echo "Starting SPRT test: ${{ env.BRANCH_NAME }}-${{ env.NEW_COMMIT_SHA }} vs master-${{ env.OLD_COMMIT_SHA }}"
        ./cutechess-cli \
        -engine cmd=./new_engine/target/release/chess_bot name=${{ env.BRANCH_NAME }}-${{ env.NEW_COMMIT_SHA }} \
        -engine cmd=./old_engine/target/release/chess_bot name=master-${{ env.OLD_COMMIT_SHA }} \
        -each proto=uci tc=inf/1+0.1 \
        -openings file=UHO_Lichess_4852_v1.epd format=epd order=random \
        -games 2 -rounds 2500 -repeat 2 -maxmoves 200 \
        -sprt elo0=0 elo1=10 alpha=0.05 beta=0.05 \
        -concurrency 2 \
        -ratinginterval 10 -pgnout games.pgn | tee cutechess_output.txt
      continue-on-error: true

    - name: Check SPRT results
      run: |
        echo "Analyzing SPRT results..."
        if grep -q "H1 was accepted" cutechess_output.txt; then
          echo "Result: PASSED. The branch '${{ env.BRANCH_NAME }}' is statistically stronger than master."
          exit 0
        elif grep -q "H0 was accepted" cutechess_output.txt; then
          echo "Result: FAILED. The branch '${{ env.BRANCH_NAME }}' is not statistically stronger than master."
          exit 1
        else
          echo "Result: INCONCLUSIVE. The SPRT test did not finish within the game limit."
          exit 1
        fi